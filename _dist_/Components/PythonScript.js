/* src\Components\PythonScript.svelte generated by Svelte v3.29.7 */
import {
	SvelteComponent,
	action_destroyer,
	append,
	attr,
	component_subscribe,
	create_component,
	destroy_component,
	detach,
	element,
	init,
	insert,
	listen,
	mount_component,
	run_all,
	safe_not_equal,
	set_style,
	space,
	transition_in,
	transition_out
} from "../../web_modules/svelte/internal.js";

import Prism from "./PrismJS.js";
import { clickOutside } from "../JS/eventListeners/clickOutside.js";
import { projectStore } from "../JS/stores/project.js";
import { hideScript } from "../JS/python/minimise.js";
import { downloadPyFile } from "../JS/python/download.js";
import { copyTextToClipboard } from "../JS/python/copyText.js";

function create_fragment(ctx) {
	let div4;
	let div3;
	let div0;
	let t1;
	let div1;
	let prism;
	let t2;
	let div2;
	let button0;
	let t3;
	let button1;
	let clickOutside_action;
	let current;
	let mounted;
	let dispose;

	prism = new Prism({
			props: {
				language: "python",
				code: /*$projectStore*/ ctx[0].pythonScript
			}
		});

	return {
		c() {
			div4 = element("div");
			div3 = element("div");
			div0 = element("div");
			div0.innerHTML = `<h1 class="text-2xl text-header-font font-bold tracking-widest ml-4" style="font-family: &#39;Montserrat&#39;, sans-serif;">ORISON</h1>`;
			t1 = space();
			div1 = element("div");
			create_component(prism.$$.fragment);
			t2 = space();
			div2 = element("div");
			button0 = element("button");
			button0.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" width="100%" height="100%" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4"></path></svg>`;
			t3 = space();
			button1 = element("button");
			button1.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" width="100%" height="100%" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 5H6a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2v-1M8 5a2 2 0 002 2h2a2 2 0 002-2M8 5a2 2 0 012-2h2a2 2 0 012 2m0 0h2a2 2 0 012 2v3m2 4H10m0 0l3-3m-3 3l3 3"></path></svg>`;
			attr(div0, "id", "previewHeader");
			attr(div0, "class", "bg-header w-full h-12 p-0 text-gray700 flex justify-between items-center border-b border-header-border");
			attr(div1, "id", "codeHolder");
			attr(div1, "class", "w-full flex-1 overflow-auto p-2");
			attr(button0, "id", "download");
			attr(button0, "class", "flex justify-center items-center h-12 w-12 p-2 hover:text-header");
			set_style(button0, "outline", "none");
			attr(button1, "id", "copy");
			attr(button1, "class", "flex justify-center items-center h-12 w-12 p-2 hover:text-header");
			set_style(button1, "outline", "none");
			attr(div2, "id", "buttonsHolder");
			attr(div2, "class", "w-1/2 h-10 flex flex-row justify-around mb-1");
			attr(div3, "id", "previewWindow");
			attr(div3, "class", "flex flex-col items-center w-3/4 h-5/6 rounded-sm text-left font-mono text-sm bg-sidebar border-2 border-gray-600 overflow-hidden");
			attr(div4, "id", "overlay");
			attr(div4, "class", "w-full h-full bg-black bg-opacity-80 fixed top-0 left-0 flex items-center justify-center align-center");
		},
		m(target, anchor) {
			insert(target, div4, anchor);
			append(div4, div3);
			append(div3, div0);
			append(div3, t1);
			append(div3, div1);
			mount_component(prism, div1, null);
			append(div3, t2);
			append(div3, div2);
			append(div2, button0);
			append(div2, t3);
			append(div2, button1);
			current = true;

			if (!mounted) {
				dispose = [
					listen(button0, "click", downloadPyFile),
					listen(button1, "click", copyTextToClipboard),
					action_destroyer(clickOutside_action = clickOutside.call(null, div3)),
					listen(div3, "click_outside", hideScript)
				];

				mounted = true;
			}
		},
		p(ctx, [dirty]) {
			const prism_changes = {};
			if (dirty & /*$projectStore*/ 1) prism_changes.code = /*$projectStore*/ ctx[0].pythonScript;
			prism.$set(prism_changes);
		},
		i(local) {
			if (current) return;
			transition_in(prism.$$.fragment, local);
			current = true;
		},
		o(local) {
			transition_out(prism.$$.fragment, local);
			current = false;
		},
		d(detaching) {
			if (detaching) detach(div4);
			destroy_component(prism);
			mounted = false;
			run_all(dispose);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let $projectStore;
	component_subscribe($$self, projectStore, $$value => $$invalidate(0, $projectStore = $$value));
	return [$projectStore];
}

class PythonScript extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, {});
	}
}

export default PythonScript;