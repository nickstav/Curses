/* src\Components\Sidebar\Export.svelte generated by Svelte v3.29.7 */
import {
	SvelteComponent,
	append,
	attr,
	detach,
	element,
	init,
	insert,
	listen,
	noop,
	run_all,
	safe_not_equal,
	set_style,
	space
} from "../../../web_modules/svelte/internal.js";

import { showScript } from "../../JS/python/export.js";
import { downloadPyFile } from "../../JS/python/download.js";
import { copyTextToClipboard } from "../../JS/python/copyText.js";

function create_fragment(ctx) {
	let div3;
	let div0;
	let button0;
	let t0;
	let label0;
	let t2;
	let hr0;
	let t3;
	let div1;
	let button1;
	let t4;
	let label1;
	let t6;
	let hr1;
	let t7;
	let div2;
	let button2;
	let t8;
	let label2;
	let mounted;
	let dispose;

	return {
		c() {
			div3 = element("div");
			div0 = element("div");
			button0 = element("button");
			button0.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" width="100%" height="100%" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path></svg>`;
			t0 = space();
			label0 = element("label");
			label0.textContent = "preview Python script";
			t2 = space();
			hr0 = element("hr");
			t3 = space();
			div1 = element("div");
			button1 = element("button");
			button1.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" width="100%" height="100%" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4"></path></svg>`;
			t4 = space();
			label1 = element("label");
			label1.textContent = "download .py file";
			t6 = space();
			hr1 = element("hr");
			t7 = space();
			div2 = element("div");
			button2 = element("button");
			button2.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" width="100%" height="100%" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 5H6a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2v-1M8 5a2 2 0 002 2h2a2 2 0 002-2M8 5a2 2 0 012-2h2a2 2 0 012 2m0 0h2a2 2 0 012 2v3m2 4H10m0 0l3-3m-3 3l3 3"></path></svg>`;
			t8 = space();
			label2 = element("label");
			label2.textContent = "copy Python script";
			attr(button0, "id", "preview");
			attr(button0, "class", "flex justify-center items-center my-6 h-10 w-10 p-1");
			set_style(button0, "outline", "none");
			attr(label0, "for", "download");
			attr(label0, "class", "flex flex-1 text-xs font-semibold items-center cursor-pointer");
			attr(div0, "id", "preview");
			attr(div0, "class", "flex flex-row justify-start align-middle hover:text-header");
			attr(hr0, "class", "border-gray-500");
			attr(button1, "id", "download");
			attr(button1, "class", "flex justify-center items-center my-6 h-10 w-10 p-1");
			set_style(button1, "outline", "none");
			attr(label1, "for", "download");
			attr(label1, "class", "flex flex-1 text-xs font-semibold items-center cursor-pointer");
			attr(div1, "id", "download");
			attr(div1, "class", "flex flex-row justify-start align-middle hover:text-header");
			attr(hr1, "class", "border-gray-500");
			attr(button2, "id", "copy");
			attr(button2, "class", "flex justify-center items-center my-6 h-10 w-10 p-1 hover:bg-gray-400");
			set_style(button2, "outline", "none");
			attr(label2, "for", "download");
			attr(label2, "class", "flex flex-1 text-xs font-semibold items-center cursor-pointer");
			attr(div2, "id", "copy");
			attr(div2, "class", "flex flex-row justify-start align-middle hover:text-header");
			attr(div3, "id", "buttonsHolder");
			attr(div3, "class", "h-full flex flex-col justify-start items-left px-3 py-3");
		},
		m(target, anchor) {
			insert(target, div3, anchor);
			append(div3, div0);
			append(div0, button0);
			append(div0, t0);
			append(div0, label0);
			append(div3, t2);
			append(div3, hr0);
			append(div3, t3);
			append(div3, div1);
			append(div1, button1);
			append(div1, t4);
			append(div1, label1);
			append(div3, t6);
			append(div3, hr1);
			append(div3, t7);
			append(div3, div2);
			append(div2, button2);
			append(div2, t8);
			append(div2, label2);

			if (!mounted) {
				dispose = [
					listen(button0, "click", showScript),
					listen(label0, "click", showScript),
					listen(button1, "click", downloadPyFile),
					listen(label1, "click", downloadPyFile),
					listen(button2, "click", copyTextToClipboard),
					listen(label2, "click", copyTextToClipboard)
				];

				mounted = true;
			}
		},
		p: noop,
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(div3);
			mounted = false;
			run_all(dispose);
		}
	};
}

class Export extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, null, create_fragment, safe_not_equal, {});
	}
}

export default Export;