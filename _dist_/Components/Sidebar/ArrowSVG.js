/* src\Components\Sidebar\ArrowSVG.svelte generated by Svelte v3.29.7 */
import {
	SvelteComponent,
	append,
	attr,
	detach,
	init,
	insert,
	noop,
	safe_not_equal,
	svg_element
} from "../../../web_modules/svelte/internal.js";

function create_fragment(ctx) {
	let svg;
	let path;
	let svg_transform_value;

	return {
		c() {
			svg = svg_element("svg");
			path = svg_element("path");
			attr(path, "stroke-linecap", "round");
			attr(path, "stroke-linejoin", "round");
			attr(path, "stroke-width", "2");
			attr(path, "d", "M5 10l7-7m0 0l7 7m-7-7v18");
			attr(svg, "xmlns", "http://www.w3.org/2000/svg");
			attr(svg, "transform", svg_transform_value = "rotate(" + /*degrees*/ ctx[0] + ")");
			attr(svg, "class", "hover:text-header");
			attr(svg, "fill", "none");
			attr(svg, "viewBox", "0 0 24 24");
			attr(svg, "stroke", "currentColor");
		},
		m(target, anchor) {
			insert(target, svg, anchor);
			append(svg, path);
		},
		p(ctx, [dirty]) {
			if (dirty & /*degrees*/ 1 && svg_transform_value !== (svg_transform_value = "rotate(" + /*degrees*/ ctx[0] + ")")) {
				attr(svg, "transform", svg_transform_value);
			}
		},
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(svg);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { degrees } = $$props;

	$$self.$$set = $$props => {
		if ("degrees" in $$props) $$invalidate(0, degrees = $$props.degrees);
	};

	return [degrees];
}

class ArrowSVG extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, { degrees: 0 });
	}
}

export default ArrowSVG;