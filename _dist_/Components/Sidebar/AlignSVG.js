/* src\Components\Sidebar\AlignSVG.svelte generated by Svelte v3.29.7 */
import {
	SvelteComponent,
	append,
	attr,
	detach,
	init,
	insert,
	noop,
	safe_not_equal,
	svg_element,
	xlink_attr
} from "../../../web_modules/svelte/internal.js";

function create_fragment(ctx) {
	let svg;
	let defs;
	let path0;
	let path1;
	let path2;
	let g6;
	let g5;
	let g1;
	let use0;
	let g0;
	let use1;
	let g3;
	let use2;
	let g2;
	let use3;
	let g4;
	let use4;
	let svg_transform_value;

	return {
		c() {
			svg = svg_element("svg");
			defs = svg_element("defs");
			path0 = svg_element("path");
			path1 = svg_element("path");
			path2 = svg_element("path");
			g6 = svg_element("g");
			g5 = svg_element("g");
			g1 = svg_element("g");
			use0 = svg_element("use");
			g0 = svg_element("g");
			use1 = svg_element("use");
			g3 = svg_element("g");
			use2 = svg_element("use");
			g2 = svg_element("g");
			use3 = svg_element("use");
			g4 = svg_element("g");
			use4 = svg_element("use");
			attr(path0, "d", "M541.33 67.45C552.37 67.45 561.33 76.4 561.33 87.45C561.33 119.83 561.33 196.96 561.33 229.34C561.33 240.38 552.37 249.34 541.33 249.34C462.83 249.34 247.31 249.34 168.81 249.34C157.77 249.34 148.81 240.38 148.81 229.34C148.81 196.96 148.81 119.83 148.81 87.45C148.81 76.4 157.77 67.45 168.81 67.45C247.31 67.45 462.83 67.45 541.33 67.45Z");
			attr(path0, "id", "b4heX5iwcY");
			attr(path1, "d", "M421.42 331.25C429.1 331.25 435.31 337.47 435.31 345.14C435.31 378.74 435.31 465.65 435.31 499.25C435.31 506.92 429.1 513.14 421.42 513.14C366.9 513.14 217.22 513.14 162.7 513.14C155.03 513.14 148.81 506.92 148.81 499.25C148.81 465.65 148.81 378.74 148.81 345.14C148.81 337.47 155.03 331.25 162.7 331.25C217.22 331.25 366.9 331.25 421.42 331.25Z");
			attr(path1, "id", "chOrLLLGe");
			attr(path2, "d", "M85.36 45.42C94.82 45.42 102.5 53.09 102.5 62.56C102.5 157.13 102.5 423.7 102.5 518.27C102.5 527.74 94.82 535.42 85.36 535.42C78.29 535.42 74.21 535.42 67.14 535.42C57.68 535.42 50 527.74 50 518.27C50 423.7 50 157.13 50 62.56C50 53.09 57.68 45.42 67.14 45.42C74.21 45.42 78.29 45.42 85.36 45.42Z");
			attr(path2, "id", "f6gv0i1gvR");
			xlink_attr(use0, "xlink:href", "#b4heX5iwcY");
			attr(use0, "opacity", "1");
			attr(use0, "fill", "currentColor");
			attr(use0, "fill-opacity", "0");
			xlink_attr(use1, "xlink:href", "#b4heX5iwcY");
			attr(use1, "opacity", "1");
			attr(use1, "fill-opacity", "0");
			attr(use1, "stroke", "currentColor");
			attr(use1, "stroke-width", "42");
			attr(use1, "stroke-opacity", "1");
			xlink_attr(use2, "xlink:href", "#chOrLLLGe");
			attr(use2, "opacity", "1");
			attr(use2, "fill", "currentColor");
			attr(use2, "fill-opacity", "0");
			xlink_attr(use3, "xlink:href", "#chOrLLLGe");
			attr(use3, "opacity", "1");
			attr(use3, "fill-opacity", "0");
			attr(use3, "stroke", "currentColor");
			attr(use3, "stroke-width", "42");
			attr(use3, "stroke-opacity", "1");
			xlink_attr(use4, "xlink:href", "#f6gv0i1gvR");
			attr(use4, "opacity", "1");
			attr(use4, "fill", "currentColor");
			attr(use4, "fill-opacity", "1");
			attr(svg, "xmlns", "http://www.w3.org/2000/svg");
			attr(svg, "transform", svg_transform_value = "rotate(" + /*degrees*/ ctx[0] + ")");
			attr(svg, "class", "hover:text-header");
			attr(svg, "viewBox", "0 0 640 640");
			attr(svg, "width", "100%");
			attr(svg, "height", "100%");
		},
		m(target, anchor) {
			insert(target, svg, anchor);
			append(svg, defs);
			append(defs, path0);
			append(defs, path1);
			append(defs, path2);
			append(svg, g6);
			append(g6, g5);
			append(g5, g1);
			append(g1, use0);
			append(g1, g0);
			append(g0, use1);
			append(g5, g3);
			append(g3, use2);
			append(g3, g2);
			append(g2, use3);
			append(g5, g4);
			append(g4, use4);
		},
		p(ctx, [dirty]) {
			if (dirty & /*degrees*/ 1 && svg_transform_value !== (svg_transform_value = "rotate(" + /*degrees*/ ctx[0] + ")")) {
				attr(svg, "transform", svg_transform_value);
			}
		},
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(svg);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { degrees } = $$props;

	$$self.$$set = $$props => {
		if ("degrees" in $$props) $$invalidate(0, degrees = $$props.degrees);
	};

	return [degrees];
}

class AlignSVG extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, { degrees: 0 });
	}
}

export default AlignSVG;